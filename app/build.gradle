buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }
}

apply plugin: 'com.android.application'

def getProp(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            throw new IllegalArgumentException("No such property " + propName + " in file " + filename);
        }
    } else {
        throw new IllegalArgumentException(filename + " does not exist!");
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.2'
    defaultConfig {
        applicationId 'me.vickychijwani.thrones'
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1_000_000
        versionName '1.0.0'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        // enable support for vector drawables on API < 21
        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "TVDB_API_KEY", "\"${getProp("local.properties", "tvdb_api_key")}\""
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'

            // BuildConfig fields for ContentProvider authority and SyncAdapter account type
            buildConfigField "String", "SYNC_ACCOUNT_TYPE", "\"${defaultConfig.applicationId}${applicationIdSuffix}.account\""
            buildConfigField "String", "CONTENT_AUTHORITY", "\"${defaultConfig.applicationId}${applicationIdSuffix}.provider\""

            // @string resources for ContentProvider authority and SyncAdapter account type
            resValue "string", "sync_account_type", "${defaultConfig.applicationId}${applicationIdSuffix}.account"
            resValue "string", "content_authority", "${defaultConfig.applicationId}${applicationIdSuffix}.provider"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // BuildConfig fields for ContentProvider authority and SyncAdapter account type
            buildConfigField "String", "SYNC_ACCOUNT_TYPE", "\"${defaultConfig.applicationId}.account\""
            buildConfigField "String", "CONTENT_AUTHORITY", "\"${defaultConfig.applicationId}.provider\""

            // @string resources for ContentProvider authority and SyncAdapter account type
            resValue "string", "sync_account_type", "${defaultConfig.applicationId}.account"
            resValue "string", "content_authority", "${defaultConfig.applicationId}.provider"
        }
    }
    signingConfigs {
        udacity {
            keyAlias 'udacity'
            keyPassword 'udacity'
            storeFile file('../udacity.jks')
            storePassword 'udacity'
        }
    }
}

repositories {
    // for Picasso snapshot
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    // UI
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile 'com.android.support:percent:24.2.1'

    // networking
    compile('com.squareup.retrofit2:retrofit:2.1.0') {
        exclude module: 'okhttp'
    }
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.picasso:picasso:2.6.0-20161009.170155-29' // FIXME hard-coded snapshot
    compile 'org.jsoup:jsoup:1.9.2'

    // utility
    compile 'io.reactivex:rxjava:1.2.1'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    // dev tools
    compile 'com.google.firebase:firebase-core:9.6.1'   // == firebase-analytics
    compile 'com.google.firebase:firebase-crash:9.6.1'

    // testing
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'  // for Firebase
